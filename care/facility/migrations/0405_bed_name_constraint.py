# Generated by Django 4.2.8 on 2023-12-26 06:17

from django.db import migrations, models


def copy_bed_name(apps, schema_editor):
    Bed = apps.get_model("facility", "Bed")
    Bed.objects.update(old_name=models.F("name"))


def reverse_copy_bed_name(apps, schema_editor):
    Bed = apps.get_model("facility", "Bed")
    Bed.objects.filter(old_name__isnull=False).update(name=models.F("old_name"))


def fix_duplicate_bed_names(apps, schema_editor):
    Bed = apps.get_model("facility", "Bed")
    duplicates = (
        Bed.objects.values("location", "name")
        .annotate(count=models.Count("pk"))
        .filter(count__gt=1)
    )
    batch = []
    # suffix beds with duplicate names with a number
    for duplicate in duplicates:
        beds = Bed.objects.filter(
            location=duplicate["location"], name=duplicate["name"]
        ).order_by("pk")
        for i, bed in enumerate(beds[1:], start=1):
            bed.name = f"{bed.name} {i}"
            batch.append(bed)

    Bed.objects.bulk_update(batch, ["name"])


class Migration(migrations.Migration):
    dependencies = [
        ("facility", "0404_merge_20231220_2227"),
    ]

    operations = [
        migrations.AddField(
            model_name="bed",
            name="old_name",
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.RunPython(copy_bed_name, reverse_copy_bed_name),
        migrations.RunPython(fix_duplicate_bed_names, migrations.RunPython.noop),
    ]
