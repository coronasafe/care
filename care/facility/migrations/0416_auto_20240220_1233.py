# Generated by Django 4.2.8 on 2024-02-20 07:03

from django.db import migrations


def transfer_assigned_to_to_clinicians(apps, schema_editor):
    PatientConsultation = apps.get_model("facility", "PatientConsultation")

    for patient_consultation in PatientConsultation.objects.all():
        if patient_consultation.assigned_to:
            # Direct assignment to ManyToManyField not possible; need to use .add()
            patient_consultation.assigned_clinicians.add(
                patient_consultation.assigned_to
            )


def reverse_transfer(apps, schema_editor):
    PatientConsultation = apps.get_model("facility", "PatientConsultation")
    consultations_to_update = []

    for consultation in PatientConsultation.objects.prefetch_related(
        "assigned_clinicians"
    ).all():
        clinicians = list(consultation.assigned_clinicians.all())
        consultation.assigned_to = clinicians[0] if clinicians else None
        consultations_to_update.append(consultation)

    PatientConsultation.objects.bulk_update(consultations_to_update, ["assigned_to"])


class Migration(migrations.Migration):
    dependencies = [
        ("facility", "0415_patientconsultation_assigned_clinicians"),
    ]

    operations = [
        migrations.RunPython(transfer_assigned_to_to_clinicians, reverse_transfer),
    ]
