# Generated by Django 2.2.11 on 2021-04-24 17:02

import care.facility.models.post_covid_data
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('facility', '0220_populate_investigations'),
    ]

    operations = [
        migrations.CreateModel(
            name='PostCovidData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('date_of_onset_symptoms', models.DateField(default=None, null=True, verbose_name='Date of first appearance of symptoms')),
                ('post_covid_time', models.IntegerField(default=1)),
                ('date_of_test_positive', models.DateField(default=None, verbose_name='date when patient was tested positive')),
                ('date_of_test_negative', models.DateField(default=None, verbose_name='date when patient was tested negative')),
                ('testing_centre', models.TextField(default='', null=True)),
                ('pre_covid_comorbidities', django.contrib.postgres.fields.jsonb.JSONField(default=dict, null=True, verbose_name='diseases before coronavirus')),
                ('post_covid_comorbidities', django.contrib.postgres.fields.jsonb.JSONField(default=dict, null=True, verbose_name='diseases after coronavirus')),
                ('treatment_duration', models.IntegerField(default=None, verbose_name='Number of days for which treatment last')),
                ('covid_category', models.TextField(blank=True, choices=[('Mild', 'MILD'), ('Moderate', 'MODERATE'), ('Severe', 'SEVERE')], null=True)),
                ('vitals_at_admission', django.contrib.postgres.fields.jsonb.JSONField(default=dict, null=True)),
                ('condition_on_admission', models.TextField(blank=True, default='', null=True)),
                ('condition_on_discharge', models.TextField(blank=True, default='', null=True)),
                ('icu_admission', models.BooleanField(default=False)),
                ('oxygen_requirement', models.BooleanField(default=False)),
                ('oxygen_requirement_detail', models.TextField(blank=True, choices=[('Nasal prongs', 'NASAL_PRONGS'), ('Face mask', 'FACE_MASK'), ('Nrbm', 'NRBM'), ('Fno', 'FNO')], default=care.facility.models.post_covid_data.OxygenType('Nasal prongs'), max_length=15, null=True)),
                ('mechanical_ventilations_niv', models.IntegerField(default=0, null=True)),
                ('mechanical_ventilations_invasive', models.IntegerField(default=0, null=True)),
                ('antivirals', models.BooleanField(default=False)),
                ('antivirals_drugs', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name=models.CharField(max_length=100))),
                ('steroids', models.BooleanField(default=False, null=True)),
                ('steroids_drugs', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('anticoagulants', models.BooleanField(default=False, null=True)),
                ('anticoagulants_drugs', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name=django.contrib.postgres.fields.jsonb.JSONField(default=dict))),
                ('antibiotics', models.BooleanField(default=False, null=True)),
                ('antibiotics_drugs', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('antifungals', models.BooleanField(default=False, null=True)),
                ('antifungals_drugs', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('documented_secondary_bacterial_infection', models.TextField(blank=True, default='', null=True, verbose_name='any bacterial infection during treatment')),
                ('documented_fungal_infection', models.TextField(blank=True, default='', null=True, verbose_name='any fungal infection during treatment')),
                ('newly_detected_comorbidities', models.TextField(blank=True, default='', null=True, verbose_name='any new disease')),
                ('worsening_of_comorbidities', models.TextField(blank=True, default='', null=True, verbose_name='is any disease worsened during treatment')),
                ('at_present_symptoms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='', max_length=100), blank=True, default=dict, null=True, size=None)),
                ('on_examination_vitals', django.contrib.postgres.fields.jsonb.JSONField(default=dict, null=True)),
                ('appearance_of_pallor', models.TextField(default=False, null=True)),
                ('appearance_of_cyanosis', models.TextField(default=False, null=True)),
                ('appearance_of_pedal_edema', models.TextField(default=False, null=True)),
                ('appearance_of_pedal_edema_details', models.TextField(default='', null=True)),
                ('systemic_examination', django.contrib.postgres.fields.jsonb.JSONField(default=dict, null=True, verbose_name='examinations of central nervous system')),
                ('single_breath_count', models.TextField(blank=True, default='', null=True)),
                ('six_minute_walk_test', models.TextField(blank=True, default='', null=True)),
                ('concurrent_medications', models.TextField(blank=True, default='', null=True)),
                ('probable_diagnosis', models.TextField(default='')),
                ('consultation', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='facility.PatientConsultation')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='facility.PatientRegistration')),
                ('treatment_facility', models.ManyToManyField(null=True, to='facility.Facility')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
