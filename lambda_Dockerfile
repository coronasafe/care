FROM public.ecr.aws/lambda/python:3.10 as python

# Python build stage
FROM python as python-build-stage

ARG BUILD_ENVIRONMENT=production

# Install yum packages
#RUN yum update -y && yum install -y \
#  # dependencies for building Python packages
#  build-essential libjpeg-dev zlib1g-dev \
#  # psycopg2 dependencies
#  libpq-dev
RUN yum update -y && \
    yum install -y gcc python3-devel python3-pip libjpeg-devel zlib-devel postgresql-devel


#RUN yum groupinstall -y \
#    'Development Tools'

RUN pip install --upgrade wheel


# Requirements are installed here to ensure they will be cached.
COPY ./requirements .

# Create Python Dependency and Sub-Dependency Wheels.
RUN pip wheel --wheel-dir /usr/src/app/wheels  \
  -r ${BUILD_ENVIRONMENT}.txt



# Python 'run' stage
FROM python as python-run-stage

ARG BUILD_ENVIRONMENT=production
ARG APP_HOME=/app

ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1
ENV BUILD_ENV ${BUILD_ENVIRONMENT}

WORKDIR ${APP_HOME}

#RUN addgroup -S django \
#    && adduser -S -G django django

# Install required system dependencies
RUN yum update -y && yum install -y \
  # psycopg2 dependencies
  postgresql-devel \
  # Translations dependencies
  gettext \
  # Misc
  wget gnupg chromium \
  # cleaning up unused files
  && yum autoremove -y \
  && rm -rf /var/cache/yum/*


# All absolute dir copies ignore workdir instruction. All relative dir copies are wrt to the workdir instruction
# copy python dependency wheels from python-build-stage
COPY --from=python-build-stage /usr/src/app/wheels  /wheels/

# use wheels to install python dependencies
RUN pip install --no-cache-dir --no-index --find-links=/wheels/ /wheels/* \
  && rm -rf /wheels/


# copy application code to WORKDIR
#COPY --chown=django:django . ${APP_HOME}
COPY . ${APP_HOME}

# Set build arguments for the database
ARG POSTGRES_HOST
ARG POSTGRES_PORT
ARG POSTGRES_DB
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD
ARG POSTGIS_URL
ARG DJANGO_SETTINGS_MODULE=config.settings.production
ARG DJANGO_SECRET_KEY
ARG REDIS_URL=redis://redis:6379/0
ARG CELERY_BROKER_URL=redis://redis:6379/0
ARG EMAIL_HOST=''
ARG EMAIL_HOST_USER=''
ARG EMAIL_HOST_PASSWORD=''
ARG DJANGO_ADMIN_URL


# Set environment variables for the database
ENV POSTGRES_HOST=$POSTGRES_HOST
ENV POSTGRES_PORT=$POSTGRES_PORT
ENV POSTGRES_DB=$POSTGRES_DB
ENV POSTGRES_USER=$POSTGRES_USER
ENV POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENV POSTGIS_URL=$POSTGIS_URL
ENV DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
ENV DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY
ENV REDIS_URL=$REDIS_URL
ENV CELERY_BROKER_URL=$CELERY_BROKER_URL
ENV EMAIL_HOST=$EMAIL_HOST
ENV EMAIL_HOST_USER=$EMAIL_HOST_USER
ENV EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
ENV DJANGO_ADMIN_URL=$DJANGO_ADMIN_URL

# run django migrations
RUN python manage.py migrate

# unset build arguments and environment variables
ARG POSTGRES_HOST=''
ARG POSTGRES_PORT=''
ARG POSTGRES_DB=''
ARG POSTGRES_USER=''
ARG POSTGRES_PASSWORD=''
ARG POSTGIS_URL=''
ARG DJANGO_SETTINGS_MODULE=''
ARG DJANGO_SECRET_KEY=''
ARG REDIS_URL=''
ARG CELERY_BROKER_URL=''
ARG EMAIL_HOST=''
ARG EMAIL_HOST_USER=''
ARG EMAIL_HOST_PASSWORD=''
ARG DJANGO_ADMIN_URL=''

ENV POSTGRES_HOST=''
ENV POSTGRES_PORT=''
ENV POSTGRES_DB=''
ENV POSTGRES_USER=''
ENV POSTGRES_PASSWORD=''
ENV POSTGIS_URL=''
ENV DJANGO_SETTINGS_MODULE=''
ENV DJANGO_SECRET_KEY=''
ENV REDIS_URL=''
ENV CELERY_BROKER_URL=''
ENV EMAIL_HOST=''
ENV EMAIL_HOST_USER=''
ENV EMAIL_HOST_PASSWORD=''
ENV DJANGO_ADMIN_URL=''

#
## make django owner of the WORKDIR directory as well.
#RUN chown django:django ${APP_HOME}
#
#USER django

CMD ["mangum_handler.handler"]
