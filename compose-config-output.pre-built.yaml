networks:
  default:
    name: care
services:
  backend:
    container_name: care
    depends_on:
      db:
        condition: service_started
    entrypoint:
    - bash
    - docker/docker-entrypoint.sh
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      DATABASE_URL: postgres://postgres:postgres@db:5432/care
      DJANGO_ADMIN_URL: admin
      DJANGO_DEBUG: "False"
      DJANGO_SECRET_KEY: '123'
      DJANGO_SECURE_CONTENT_TYPE_NOSNIFF: "False"
      DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS: "False"
      DJANGO_SECURE_HSTS_PRELOAD: "False"
      DJANGO_SECURE_SSL_REDIRECT: "False"
      DJANGO_SETTINGS_MODULE: config.settings.staging
      EMAIL_HOST: '123'
      EMAIL_PASSWORD: '123'
      EMAIL_USER: '123'
      FACILITY_S3_BUCKET: facility-bucket
      FILE_UPLOAD_BUCKET: patient-bucket
      POSTGIS_URL: postgres://postgres:postgres@db:5432/care
      POSTGRES_DB: care
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: '5432'
      POSTGRES_USER: postgres
      REDIS_URL: redis://redis:6379/0
      SNS_ACCESS_KEY: '123'
      SNS_SECRET_KEY: '123'
    image: ghcr.io/coronasafe/care:latest
    ports:
    - published: 9000
      target: 9000
    - published: 9876
      target: 9876
  celery-beat:
    container_name: care_celery_beat
    depends_on:
      backend:
        condition: service_started
      db:
        condition: service_started
      redis:
        condition: service_started
    entrypoint:
    - bash
    - celery_beat.sh
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      DATABASE_URL: postgres://postgres:postgres@db:5432/care
      DJANGO_ADMIN_URL: admin
      DJANGO_DEBUG: "False"
      DJANGO_SECRET_KEY: '123'
      DJANGO_SECURE_CONTENT_TYPE_NOSNIFF: "False"
      DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS: "False"
      DJANGO_SECURE_HSTS_PRELOAD: "False"
      DJANGO_SECURE_SSL_REDIRECT: "False"
      DJANGO_SETTINGS_MODULE: config.settings.staging
      EMAIL_HOST: '123'
      EMAIL_PASSWORD: '123'
      EMAIL_USER: '123'
      FACILITY_S3_BUCKET: facility-bucket
      FILE_UPLOAD_BUCKET: patient-bucket
      POSTGIS_URL: postgres://postgres:postgres@db:5432/care
      POSTGRES_DB: care
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: '5432'
      POSTGRES_USER: postgres
      REDIS_URL: redis://redis:6379/0
      SNS_ACCESS_KEY: '123'
      SNS_SECRET_KEY: '123'
    image: ghcr.io/coronasafe/care:latest
  celery-worker:
    container_name: care_celery_worker
    depends_on:
      backend:
        condition: service_started
      db:
        condition: service_started
      redis:
        condition: service_started
    entrypoint:
    - bash
    - celery_worker.sh
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      DATABASE_URL: postgres://postgres:postgres@db:5432/care
      DJANGO_ADMIN_URL: admin
      DJANGO_DEBUG: "False"
      DJANGO_SECRET_KEY: '123'
      DJANGO_SECURE_CONTENT_TYPE_NOSNIFF: "False"
      DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS: "False"
      DJANGO_SECURE_HSTS_PRELOAD: "False"
      DJANGO_SECURE_SSL_REDIRECT: "False"
      DJANGO_SETTINGS_MODULE: config.settings.staging
      EMAIL_HOST: '123'
      EMAIL_PASSWORD: '123'
      EMAIL_USER: '123'
      FACILITY_S3_BUCKET: facility-bucket
      FILE_UPLOAD_BUCKET: patient-bucket
      POSTGIS_URL: postgres://postgres:postgres@db:5432/care
      POSTGRES_DB: care
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: '5432'
      POSTGRES_USER: postgres
      REDIS_URL: redis://redis:6379/0
      SNS_ACCESS_KEY: '123'
      SNS_SECRET_KEY: '123'
    image: ghcr.io/coronasafe/care:latest
  db:
    container_name: care_db
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      DATABASE_URL: postgres://postgres:postgres@db:5432/care
      DJANGO_DEBUG: "False"
      FACILITY_S3_BUCKET: facility-bucket
      FILE_UPLOAD_BUCKET: patient-bucket
      POSTGRES_DB: care
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: '5432'
      POSTGRES_USER: postgres
    image: postgres:latest
    restart: always
    volumes:
    - postgres-data:/var/lib/postgresql/data:rw
  localstack:
    environment:
      AWS_DEFAULT_REGION: ap-south-1
      EDGE_PORT: '4566'
      SERVICES: s3
    image: localstack/localstack:latest
    volumes:
    - /home/wednesday/care/docker/awslocal:/docker-entrypoint-initaws.d:rw
    - /tmp/localstack:/tmp/localstack:rw
  redis:
    container_name: care_redis
    image: redis:alpine
    restart: always
version: '3.4'
volumes:
  postgres-data: {}

